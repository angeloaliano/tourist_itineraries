function Dados(T,atracoes,Hoteis,Restaurantes)
auxR = [
-22.936	-43.169
-22.911	-43.202
-22.941	-43.185
-22.954	-43.192
-22.991	-43.233
-22.949	-43.196
-22.936	-43.169
-22.911	-43.202
-22.941	-43.185
-22.954	-43.192
-22.991	-43.233
-22.949	-43.196
-22.936	-43.169
-22.911	-43.202
-22.941	-43.185
-22.954	-43.192
-22.991	-43.233
-22.949	-43.196
-22.936	-43.169
-22.911	-43.202
-22.941	-43.185
-22.954	-43.192
-22.991	-43.233
-22.949	-43.196
-22.936	-43.169
-22.911	-43.202
-22.941	-43.185
-22.954	-43.192
-22.991	-43.233
-22.949	-43.196
]
auxH =  [
-22.944	-43.185
-22.968	-43.181
-22.935	-43.175
-22.974	-43.195
-22.909	-43.215
-22.932	-43.188
-22.944	-43.185
-22.968	-43.181
-22.935	-43.175
-22.974	-43.195
-22.909	-43.215
-22.932	-43.188
-22.944	-43.185
-22.968	-43.181
-22.935	-43.175
-22.974	-43.195
-22.909	-43.215
-22.932	-43.188
-22.944	-43.185
-22.968	-43.181
-22.935	-43.175
-22.974	-43.195
-22.909	-43.215
-22.932	-43.188
]
auxTR=2*ones(Restaurantes*maximum(T))
auxPR=[
10
10
6
6
3
3
10
10
6
6
3
3
10
10
6
6
3
3
10
10
6
6
3
3
10
10
6
6
3
3
]
auxTH=8*ones(Hoteis*(maximum(T)-1))
auxPH=[
10
10
6
6
3
3
10
10
6
6
3
3
10
10
6
6
3
3
10
10
6
6
3
3
]

L = [
-22.910	-43.165;
-22.986	-43.221;
-22.986	-43.204;
-22.973	-43.185;
-22.951	-43.210;
-22.949	-43.154;
-22.915	-43.179;
-22.915	-43.177;
-22.945	-43.197;
-22.958	-43.211;
-22.895	-43.179;
-22.989	-43.227;
-22.912	-43.230;
-22.966	-43.225;
-22.980	-43.215;
-22.936	-43.184;
-22.893	-43.192;
-22.894	-43.187;
-22.965	-43.245;
-22.995	-43.242;
-22.905	-43.182;
-22.896	-43.181;
-22.896	-43.177;
-22.892	-43.194;
-22.905	-43.178;
-22.986	-43.186;
-22.897	-43.220;
-22.909	-43.176;
-22.925	-43.176;
-22.953	-43.164;
-22.910	-43.180;
     auxR;
     auxH
]

    n = atracoes + 1 + Restaurantes*maximum(T) + Hoteis*(maximum(T)-1)


    ϕ = L[:,1] #Latitude
    lambda = L[:,2] #Longitude
    Raio = 6371

    ϕ = ϕ*pi/180
    lambda = lambda*pi/180
    c=zeros(n,n)
    for i in 1:n, j in 1:n
        ϕ1 = ϕ[i]
        ϕ2 = ϕ[j]
        lambda1 = lambda[i]
        lambda2 = lambda[j]
        Δϕ = abs(ϕ1-ϕ2)
        Δlambda = abs(lambda1-lambda2)
        a=sin(Δϕ/2)*sin(Δϕ/2) + cos(ϕ1)*cos(ϕ2)*sin(Δlambda/2)*sin(Δlambda/2)
        k = 2*atan(sqrt(a),sqrt(1-a))
        c[i,j] = Raio*k
        #if c[i,j] > 50
        #    c[i,j] = c[i,j]*0.8
        #end
    end

    aux3=[
    3
    3
    3
    3
    3
    1
    1
    1
    2
    2
    1
    2
    2
    2
    1
    2
    1
    2
    1
    1
    2
    1
    1
    1
    1
    1
    1
    2
    1
    1
]

    d = round.([0; aux3;[auxTR;auxTH]],digits=2)

    e=zeros(n,n)
    for i in 1:n, j in 1:n
        if c[i,j] < 3
            e[i,j] = c[i,j]/4
        elseif c[i,j] >=3 && c[i,j] <10
            e[i,j] = c[i,j]/20
        elseif c[i,j] >=10
            e[i,j] = c[i,j]/30
        end
        #if e[i,j] > 1
        #    e[i,j] = round(e[i,j])
        #end
    end

    e = round.(e,digits=2)

    premio_atracoes=[
    7.2	7.2	8	10	10	0.6	0.6	0.8	2.1	2.1	1.5	1.6	4.8	2.1	1.5	1	0.9	0.8	1.6	2.4	2	2.4	1.6	2	0.8	0.6	1	1.8	1	1.5
    7.2	7.2	8	10	10	0.6	0.6	0.8	2.1	2.1	1.5	1.6	4.8	2.1	1.5	1	0.9	0.8	1.6	2.4	2	2.4	1.6	2	0.8	0.6	1	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	0.8	2.1	2.1	1.5	1.6	4.8	2.1	1.5	1	0.9	0.8	1.6	2.4	2	2.4	1.6	2	0.8	0.6	1	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	1.2	1.4	1.4	1	1.6	8	2.1	1.5	1	0.9	2.4	2.4	2.4	2	2.4	1.6	3	1.6	0.6	1.5	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	1.2	1.4	1.4	1	1.6	8	2.1	1.5	1	0.9	2.4	2.4	2.4	2	2.4	1.6	3	1.6	0.6	1.5	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	1.2	1.4	1.4	1	1.6	8	2.1	1.5	1	0.9	2.4	2.4	2.4	2	2.4	1.6	3	1.6	0.6	1.5	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	1.2	1.4	1.4	1	1.6	8	2.1	1.5	1	0.9	2.4	2.4	2.4	2	2.4	1.6	3	1.6	0.6	1.5	1.8	1	2
    7.2	7.2	8	10	10	0.6	0.6	1.2	1.4	1.4	1	1.6	8	2.1	1.5	1	0.9	2.4	2.4	2.4	2	2.4	1.6	3	1.6	0.6	1.5	1.8	1	2
    9	9	10	8	8	0.6	0.6	0.8	5.6	7	5	8	4.8	2.8	3	1	0.9	2	1.6	3.6	3	3.6	2.4	2	0.8	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	0.8	5.6	7	5	8	4.8	2.8	3	1	0.9	2	1.6	3.6	3	3.6	2.4	2	0.8	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	0.8	5.6	7	5	8	4.8	2.8	3	1	0.9	2	1.6	3.6	3	3.6	2.4	2	0.8	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	1.2	4.2	5.6	4	8	8	2.8	3	1	0.9	4	2.4	3.6	3	3.6	2.4	3	1.6	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	1.2	4.2	5.6	4	8	8	2.8	3	1	0.9	4	2.4	3.6	3	3.6	2.4	3	1.6	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	1.2	4.2	5.6	4	8	8	2.8	3	1	0.9	4	2.4	3.6	3	3.6	2.4	3	1.6	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	1.2	4.2	5.6	4	8	8	2.8	3	1	0.9	4	2.4	3.6	3	3.6	2.4	3	1.6	0.6	2	2.4	2	3
    9	9	10	8	8	0.6	0.6	1.2	4.2	5.6	4	8	8	2.8	3	1	0.9	4	2.4	3.6	3	3.6	2.4	3	1.6	0.6	2	2.4	2	3
    8.1	8.1	9	6	6	2.4	2.4	2.4	5.6	7	5	8	3.2	4.2	5	1	0.9	2	1.6	4.8	4	4.8	3.2	3	0.8	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	2.4	5.6	7	5	8	3.2	4.2	5	1	0.9	2	1.6	4.8	4	4.8	3.2	3	0.8	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	2.4	5.6	7	5	8	3.2	4.2	5	1	0.9	2	1.6	4.8	4	4.8	3.2	3	0.8	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	4	4.2	5.6	4	8	6.4	4.2	5	1	0.9	4	2.4	4.8	4	4.8	3.2	4	1.6	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	4	4.2	5.6	4	8	6.4	4.2	5	1	0.9	4	2.4	4.8	4	4.8	3.2	4	1.6	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	4	4.2	5.6	4	8	6.4	4.2	5	1	0.9	4	2.4	4.8	4	4.8	3.2	4	1.6	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	4	4.2	5.6	4	8	6.4	4.2	5	1	0.9	4	2.4	4.8	4	4.8	3.2	4	1.6	0.9	2	3	3	3
    8.1	8.1	9	6	6	2.4	2.4	4	4.2	5.6	4	8	6.4	4.2	5	1	0.9	4	2.4	4.8	4	4.8	3.2	4	1.6	0.9	2	3	3	3
    5.4	5.4	6	4	4	2.4	2.4	2.4	7	5.6	4	6.4	3.2	5.6	3	5	3	2	1.6	2.4	2	2.4	1.6	3	0.8	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	2.4	7	5.6	4	6.4	3.2	5.6	3	5	3	2	1.6	2.4	2	2.4	1.6	3	0.8	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	2.4	7	5.6	4	6.4	3.2	5.6	3	5	3	2	1.6	2.4	2	2.4	1.6	3	0.8	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	4	5.6	4.2	3	6.4	6.4	5.6	3	2	3	4	2.4	2.4	2	2.4	1.6	4	1.6	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	4	5.6	4.2	3	6.4	6.4	5.6	3	2	3	4	2.4	2.4	2	2.4	1.6	4	1.6	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	4	5.6	4.2	3	6.4	6.4	5.6	3	2	3	4	2.4	2.4	2	2.4	1.6	4	1.6	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	4	5.6	4.2	3	6.4	6.4	5.6	3	2	3	4	2.4	2.4	2	2.4	1.6	4	1.6	0.9	2.5	3.6	2.5	3
    5.4	5.4	6	4	4	2.4	2.4	4	5.6	4.2	3	6.4	6.4	5.6	3	2	3	4	2.4	2.4	2	2.4	1.6	4	1.6	0.9	2.5	3.6	2.5	3
    1.8	1.8	2	2	2	2.4	2.4	0.8	7	2.8	2	2.4	2.4	2.8	2	5	3	2	1.6	2.4	2	2.4	1.6	4	0.8	1.2	2	3	1	1.5
    1.8	1.8	2	2	2	2.4	2.4	0.8	7	2.8	2	2.4	2.4	2.8	2	5	3	2	1.6	2.4	2	2.4	1.6	4	0.8	1.2	2	3	1	1.5
    1.8	1.8	2	2	2	2.4	2.4	0.8	7	2.8	2	2.4	2.4	2.8	2	5	3	2	1.6	2.4	2	2.4	1.6	4	0.8	1.2	2	3	1	1.5
    1.8	1.8	2	2	2	2.4	2.4	1.2	5.6	2.1	1.5	2.4	3.2	2.8	2	5	3	3.2	1.6	1.2	1	1.2	0.8	2	0.8	1.2	2	3	1	1.5
    1.8	1.8	2	2	2	2.4	2.4	1.2	5.6	2.1	1.5	2.4	3.2	2.8	2	2	1.5	3.2	0.8	1.2	1	1.2	0.8	2	0.8	1.2	2	2.4	1	1.5
    1.8	1.8	2	2	2	2.4	2.4	1.2	5.6	2.1	1.5	2.4	3.2	2.8	2	2	1.5	3.2	0.8	1.2	1	1.2	0.8	2	0.8	1.2	2	2.4	1	1
    1.8	1.8	2	2	2	2.4	2.4	1.2	5.6	2.1	1.5	2.4	3.2	2.8	2	2	1.5	3.2	0.8	1.2	1	1.2	0.8	2	0.8	1.2	2	2.4	1	1
]

P = [zeros(39) premio_atracoes zeros(39,54);
     zeros(46,85)]

Q = [0
9
9
10
10
10
3
3
4
7
7
5
8
8
7
5
5
3
3
4
6
5
6
4
5
4
3
5
6
5
5
auxPR;
auxPH
];

aux = [8;8;8;9;9;8;8;8;9;10;8;9;8;8;8;9;8;8;8;10;9;8;8;9;8;8;9;9;8;8]
aux2= [20;20;20;17;17;18;18;18;17;17;18;17;17;18;18;17;18;18;18;17;17;18;18;18;18;18;17;17;18;18]

    auxAi=zeros(atracoes,0)
    auxBi=zeros(atracoes,0)
    for t in 1:maximum(T)
        auxAi=[auxAi aux .+ 24*(t-1)]
        auxBi=[auxBi aux2 .+ 24*(t-1)]
    end

    excecao=[11,17,22,28]
    cedo=[9,9,9,9]
    tarde=[12,12,12,12]

    t=maximum(T)
    cont=0
    for i in excecao
        cont=cont+1
        auxAi[i,t] = (maximum(T)-1)*24+8
        auxBi[i,t] = (maximum(T)-1)*24+12
    end

auxARi=[
11	1000	1000	1000	1000
11	1000	1000	1000	1000
11	1000	1000	1000	1000
11	1000	1000	1000	1000
11	1000	1000	1000	1000
11	1000	1000	1000	1000
1000	35	1000	1000	1000
1000	35	1000	1000	1000
1000	35	1000	1000	1000
1000	35	1000	1000	1000
1000	35	1000	1000	1000
1000	35	1000	1000	1000
1000	1000	59	1000	1000
1000	1000	59	1000	1000
1000	1000	59	1000	1000
1000	1000	59	1000	1000
1000	1000	59	1000	1000
1000	1000	59	1000	1000
1000	1000	1000	83	1000
1000	1000	1000	83	1000
1000	1000	1000	83	1000
1000	1000	1000	83	1000
1000	1000	1000	83	1000
1000	1000	1000	83	1000
1000	1000	1000	1000	107
1000	1000	1000	1000	107
1000	1000	1000	1000	107
1000	1000	1000	1000	107
1000	1000	1000	1000	107
1000	1000	1000	1000	107
]

auxBRi=[
15	1000	1000	1000	1000
15	1000	1000	1000	1000
15	1000	1000	1000	1000
15	1000	1000	1000	1000
15	1000	1000	1000	1000
15	1000	1000	1000	1000
1000	39	1000	1000	1000
1000	39	1000	1000	1000
1000	39	1000	1000	1000
1000	39	1000	1000	1000
1000	39	1000	1000	1000
1000	39	1000	1000	1000
1000	1000	63	1000	1000
1000	1000	63	1000	1000
1000	1000	63	1000	1000
1000	1000	63	1000	1000
1000	1000	63	1000	1000
1000	1000	63	1000	1000
1000	1000	1000	87	1000
1000	1000	1000	87	1000
1000	1000	1000	87	1000
1000	1000	1000	87	1000
1000	1000	1000	87	1000
1000	1000	1000	87	1000
1000	1000	1000	1000	111
1000	1000	1000	1000	111
1000	1000	1000	1000	111
1000	1000	1000	1000	111
1000	1000	1000	1000	111
1000	1000	1000	1000	111
]

auxAHi=[
19	1000	1000	1000	1000
19	1000	1000	1000	1000
19	1000	1000	1000	1000
19	1000	1000	1000	1000
19	1000	1000	1000	1000
19	1000	1000	1000	1000
1000	43	1000	1000	1000
1000	43	1000	1000	1000
1000	43	1000	1000	1000
1000	43	1000	1000	1000
1000	43	1000	1000	1000
1000	43	1000	1000	1000
1000	1000	67	1000	1000
1000	1000	67	1000	1000
1000	1000	67	1000	1000
1000	1000	67	1000	1000
1000	1000	67	1000	1000
1000	1000	67	1000	1000
1000	1000	1000	91	1000
1000	1000	1000	91	1000
1000	1000	1000	91	1000
1000	1000	1000	91	1000
1000	1000	1000	91	1000
1000	1000	1000	91	1000
]

auxBHi=[
24	1000	1000	1000	1000
24	1000	1000	1000	1000
24	1000	1000	1000	1000
24	1000	1000	1000	1000
24	1000	1000	1000	1000
24	1000	1000	1000	1000
1000	48	1000	1000	1000
1000	48	1000	1000	1000
1000	48	1000	1000	1000
1000	48	1000	1000	1000
1000	48	1000	1000	1000
1000	48	1000	1000	1000
1000	1000	72	1000	1000
1000	1000	72	1000	1000
1000	1000	72	1000	1000
1000	1000	72	1000	1000
1000	1000	72	1000	1000
1000	1000	72	1000	1000
1000	1000	1000	96	1000
1000	1000	1000	96	1000
1000	1000	1000	96	1000
1000	1000	1000	96	1000
1000	1000	1000	96	1000
1000	1000	1000	96	1000
]

    a=[
    zeros(1,maximum(T)) ;
    auxAi;
    auxARi;
    auxAHi
    ]

    b=[
    maximum(T)*24*ones(1,maximum(T)) ;
    auxBi;
    auxBRi;
    auxBHi
    ]

    R=[
    [32:37];
    [38:43];
    [44:49];
    [50:55];
    [56:61]
    ]

    H=[
    [62:67];
    [68:73];
    [74:79];
    [80:85]
    ]

    M=maximum(T)*24
    w0 = 7

    n_min=[3;3;3;3;3]
    n_max=[6;6;6;6;6]

    return (n,L,a,b,c,d,e,P,Q,R,H,M,w0,n_min,n_max)
end
